<!-- each 'section' is a fullpage for fullpage.js, the container for fullpage is #landing -->

<div id="landing">
    <div class="section">
		<div class="landingPageNavigation">
			<ul>
		        <li><a href="#explor">Start Exploring</a></li>
		        <li><a href="#about">About Explor</a></li>
		        <li><a href="#developers">The Team</a></li>
		    </ul>
		</div>
    	<h1>Explor</h1>
		<%= form_for :location, url: results_path, html: { id: "place-search" } do |f|  %>
          <%= f.text_field :name, id: 'autocomplete' %>
          <%= f.submit 'Explor' %>
        <% end %>
		
    </div>
    <div class="section">
	    <div class="landingPageNavigation">
			<ul>
		        <li><a href="#explor">Start Exploring</a></li>
		        <li><a href="#about">About Explor</a></li>
		        <li><a href="#developers">The Team</a></li>
		    </ul>
		</div>
    <h2>about this app</h2>
    </div>
    <div class="section">
	    <div class="landingPageNavigation">
			<ul>
		        <li><a href="#explor">Start Exploring</a></li>
		        <li><a href="#about">About Explor</a></li>
		        <li><a href="#developers">The Team</a></li>
		    </ul>
		</div>
		about the creators</div>
</div>

<script>
var placeSearch, autocomplete, place;

function initAutocomplete() {
  // Create the autocomplete object, restricting the search to geographical
  // location types.
  autocomplete = new google.maps.places.Autocomplete(
      /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
      {types: ['geocode']});

  // When the user selects an address from the dropdown, populate the address
  // fields in the form.
  autocomplete.addListener('place_changed', function() {
    place = autocomplete.getPlace();
    // update hidden form input with place data
    $('#place-search input[name="location[name]"]').val(place.formatted_address);
  });
}

</script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=<%= @maps_key %>&libraries=places&callback=initAutocomplete"></script>




